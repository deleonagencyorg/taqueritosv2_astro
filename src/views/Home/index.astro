<!-- src/views/Home/index.astro -->
---
import LazyImage from '../../components/common/LazyImage.astro';
import { t } from '../../i18n/i18n';
import type { Locale } from '../../i18n/i18n';
import { getLocale } from '../../i18n/i18n';
import Carousel from '../../components/common/Carousel/index.astro';
import RecipeCard from '../../components/recipes/RecipeCard.astro';
import RecipesCarousel from '../../components/recipes/RecipesCarousel.astro';
import Newsletter from '../../components/common/Newsletter/index.astro';
import FloatingChip from '../../components/common/FloatingChip/index.astro';
import SocialMediaIcons from '../../components/common/SocialMediaIcons/index.astro';
import './styles.css';
import NewProductsCarousel from '../../components/common/NewProductsCarousel/index.astro';
import SimpleProductCarousel from '../../components/common/SimpleProductCarousel/index.astro';
import CrownTitle from '../../components/common/CrownTitle/CrownTitle.astro';
import AnimHeart from '../../components/common/AnimHeart/index.astro';
import ChipsFromBag from '../../components/common/ChipsFromBag/index.astro';
import InstagramEmbed from '../../components/common/InstagramEmbed/index.astro';
import Delivery from '../../components/common/Delivery/index.astro';
import ProductsCarousel from '../../components/common/ProductsCarousel/index.astro';

// Add styles for active brand logo
const activeLogoStyles = `
  .active-brand {
    box-shadow: 0 0 10px rgba(0,0,0,0.5);
    opacity: 0.5;
    z-index: 10;
    border-width: 4px !important;
    transform: scale(1.1);
    transition: transform 0.3s ease;
  }
`;

export interface Props {
  loading?: boolean;
}
const { loading = false } = Astro.props;

// Obtener idioma actual y exportarlo para que esté disponible en el template
const currentLang = getLocale();

// Precargar namespaces con validación
t('common', { locale: currentLang }) || {};
t('recipes', { locale: currentLang }) || {};
t('news', { locale: currentLang }) || {};
t('products', { locale: currentLang }) || {};
t('newproducts', { locale: currentLang }) || {};
t('brands', { locale: currentLang }) || {};
t('contentN', { locale: currentLang }) || {};
t('chips', { locale: currentLang }) || {};


// Cargar productos nuevos con validación
const newProducts = t('products', { namespace: 'newproducts', locale: currentLang }) || [];

// Los datos de marcas ya están definidos más abajo

const validProducts = Array.isArray(newProducts) ? newProducts : [];

const chips = t('chips', { namespace: 'newproducts', locale: currentLang }) || [];
const brands = t('brands', { namespace: 'brands', locale: currentLang }) || [];

// Obtener productos de Zibas según el idioma
const zibasBrand = brands.find((brand: any) => brand.id === 'zibas');
const zibasProducts = zibasBrand?.products || [];

const homeAssets = t('home', { namespace: 'common', locale: currentLang }) || {};
const recipesAssets = t('home', { namespace: 'recipes', locale: currentLang }) || {};
const recipeItems = t('items', { namespace: 'recipes', locale: currentLang }) || [];

// Obtener datos de delivery
const deliveryData = homeAssets.delivery || {};

// Obtener las imágenes de máscara del slider desde los archivos de idioma (desktop y mobile)
const sliderMask = t('assets.slidermask', { namespace: 'common', locale: currentLang }) || 'https://snack.yummiespromociones.com/snacksyummies/bg-front.webp';
const sliderMaskMobile = t('assets.slidermaskmobile', { namespace: 'common', locale: currentLang }) || 'https://snack.yummiespromociones.com/snacksyummies/bg-front-mobile_1_.webp';

// Obtener productos para el ca rusel orbital


const commonAssets = t('assets.slider', { namespace: 'common', locale: currentLang }) || [];
const slides = Array.isArray(commonAssets) 
  ? commonAssets
    .filter(asset => asset && typeof asset === 'object' && asset.desktop && asset.mobile)
    .map(asset => ({
      desktop: asset.desktop,
      mobile: asset.mobile,
      alt: asset.alt || 'Snacks Yummies',
      title: asset.title || '',
      subtitle: asset.description || '',
      link: asset.url || asset.link || ''
    }))
  : [];



---

  <main class="w-full flex flex-col items-center justify-center mt-0">
    <!-- Slider Section con máscara -->
    <div class="relative w-full overflow-hidden max-w-[100vw] h-auto aspect-[1/1] md:aspect-[21/9] lg:h-[66vh]">
      <!-- Título superpuesto posicionado a la izquierda y centrado verticalmente -->
      <!-- div class="absolute left-8 top-1/2 transform -translate-y-1/2 z-20 hidden md:block">
        <LazyImage 
          src="https://snack.yummiespromociones.com/snacksyummies/Header-Title.webp" 
          alt="Título decorativo" 
          class="md:w-40 lg:w-80 object-cover object-center" 
        />
      </div>
      
      <!-- Máscara PNG superpuesta (cambia según el idioma y dispositivo) -->
      <!-- <div class="absolute inset-0 z-10 pointer-events-none w-screen left-0 right-0">
        <img src={sliderMask} alt="Máscara decorativa" class="hidden md:block w-full h-full object-cover object-center" />
        <img src={sliderMaskMobile} alt="Máscara decorativa" class="md:hidden w-full h-full object-cover object-center" />
      </div> -->
      
      <!-- Slider posicionado más a la derecha en desktop, full width en móvil 
      <div class="relative z-0 w-full md:w-[80%] md:ml-auto">
        <Carousel slides={slides} />
       
      </div>-->

      <div class="relative z-0 w-full md:w-[100%] md:ml-auto md:h-full h-[72vh] md:flex md:items-center md:justify-center">
        <Carousel slides={slides} />
      </div>
    </div>
    
    <!-- Sección de Productos Zibas -->
    {zibasProducts.length > 0 && (
      <section class="w-full py-16 bg-blue">
        <div class="container mx-auto px-4">
          <ProductsCarousel 
            products={zibasProducts}
            title={currentLang === 'es' ? 'DESCUBRE LA VARIEDAD DE NUESTROS' : 'Our Zibas Products'}
            description={currentLang === 'es' ? 'PRODUCTOS' : 'Discover the delicious variety of Zibas chips with unique flavors'}
            color={'white'}
            autoplay={true}
            speed={4000}
            slidesPerView={3}
            spaceBetween={30}
            loop={true}
            className="max-w-7xl mx-auto"
          />
        </div>
      </section>
    )}
    
 

    <!-- Sección de Carrusel Orbital de Productos -->


    <!-- Sección de recetas con carrusel -->
    <!-- <section id="recipes" class="w-full py-12" transition:animate="slide">
    </section> -->

  

 


  
  <!-- <div class=" bg-tertiary">
    <svg width="100vw" height="150" viewBox="0 0 100vw 150" preserveAspectRatio="none" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M1442 0H0C99.3333 16.6667 380 50 708 50C1036 50 1334 16.6667 1442 0Z" fill="#91CAE9"/>
    </svg>
  </div> -->

    <!-- <section id="quiz" class="mt-[-100px] w-full h-auto flex flex-col items-center justify-center bg-tertiary py-12" transition:animate="slide">
      <div class="container mx-auto px-4">
        
        
        <div class="flex flex-col md:flex-row w-full gap-4 md:gap-8">
          <div class="w-full md:w-1/2  p-8 flex items-center justify-center md:min-h-[300px]">
            <div class="text-center">
              <LazyImage src="https://snack.yummiespromociones.com/snacksyummies/quizilustration.webp" alt='Ilustración quiz interactivo Snacks Yummies' class="w-full h-full object-cover object-center"/>
            </div>
          </div>
          
          <div class="w-full md:w-1/2 md:p-8 p-0 flex items-center justify-center md:min-h-[300px] ">
            <div class="text-center">
              <LazyImage src={homeAssets.quiz.title} alt='Título quiz - Descubre tu snack ideal' class="w-full h-full object-cover object-center"/>
              <p class="text-white  text-xl py-4 mb-6">{homeAssets.quiz.description}</p>
             
              <p>  <a href={homeAssets.quiz.urlButton} class="bg-white text-primary font-bold py-2 px-8 rounded-full">{homeAssets.quiz.button}</a></p>
            </div>
          
          </div>
        </div>
      </div>
    </section> -->

  <!-- <section id="recipes" class="w-full py-12 flex flex-col items-center justify-center" transition:animate="slide">
    <div class="flex flex-col md:flex-row items-center justify-center gap-6 md:gap-8 px-8 py-8 w-full">
      <div class="w-full md:w-1/2 flex flex-col justify-center items-center gap-4">
        <div class="flex flex-row items-center gap-8">
          <LazyImage src="https://snack.yummiespromociones.com/taqueritos/Sal.webp" alt="Sal para recetas mexicanas auténticas" class="w-12 object-cover object-center"/>
          <h3 class="text-5xl font-normal text-center text-white">TAQUE</h3>
          <LazyImage src="https://snack.yummiespromociones.com/taqueritos/pimienta.webp" alt="Pimienta para sazón mexicano" class="w-12 object-cover object-center"/>
        </div>
        <h3 class="text-5xl font-normal text-center text-white">RECETAS</h3>
        <p>
          <LazyImage src="https://snack.yummiespromociones.com/taqueritos/sarten.webp" alt="Sartén para recetas mexicanas con Taqueritos" class="w-80 object-cover object-center"/>
        </p>
      </div>
      <div class="w-full md:w-1/2 flex flex-col justify-center items-center gap-8">
        <a href={recipesAssets.explore_more.link} target="_blank" rel="noopener noreferrer" class="px-6 py-2 border border-white text-white font-medium rounded-full shadow-md hover:bg-blue-100 transition-colors duration-300 flex items-center justify-center">
          <span class="mr-2">{recipesAssets.explore_more.title}</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </a>
        <div id="allrecipes" class="grid grid-cols-2 md:grid-cols-2 gap-6 w-full px-4">
          {recipeItems.slice(0, 2).map((recipe: {
            id: string;
            title: string;
            image: string;
            preparation_time: number;
          }) => (
            <RecipeCard
              image={recipe.image}
              title={recipe.title}
              time={`${recipe.preparation_time}MIN`}
              id={recipe.id}
              textColor="text-white"
              iconColor="text-white"
            />
          ))}
        </div>
      </div>
    </div>
    <div class="md:w-full w-[80%] flex flex-wrap items-center justify-center gap-2 px-4 py-8 text-white font-bold text-md md:text-4xl font-sans font-weight-bold">
      <span>{recipesAssets.visit_text_1.title}</span>
      <a href={recipesAssets.visit_1.link} target="_blank" rel="noopener noreferrer" class="text-red">{recipesAssets.visit_1.title}</a>
      <span>{recipesAssets.visit_text_2.title}</span>
      <a href={recipesAssets.visit_2.link} target="_blank" rel="noopener noreferrer" class="text-red">{recipesAssets.visit_2.title}</a>
   
   
        <span>{recipesAssets.visit_text_3.title}</span>
        <a href={recipesAssets.visit_3.link} target="_blank" rel="noopener noreferrer" class="text-red">{recipesAssets.visit_3.title}</a>
        
    
    </div>
  </section> -->
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const iframe = entry.target.querySelector('iframe');
              if (iframe) {
                iframe.src = iframe.dataset.src;
                iframe.classList.remove('hidden');
                entry.target.querySelector('.spotify-skeleton').remove();
                observer.unobserve(entry.target);
              }
            }
          });
        }, { rootMargin: '200px' });

        document.querySelectorAll('#spotify > div > div').forEach(container => {
          observer.observe(container);
        });
      });
    </script>

  </main>
