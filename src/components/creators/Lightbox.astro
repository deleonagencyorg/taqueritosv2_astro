---
// src/components/creators/Lightbox.astro
---

<div id="creator-lightbox" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
  <!-- Contenedor del contenido -->
  <div id="lightbox-content" class="relative w-full h-[90vh] max-w-6xl bg-gray-900 rounded-lg shadow-xl transform scale-95 transition-all duration-300 flex flex-row">
    <!-- Botón de cerrar -->
    <button id="lightbox-close" class="absolute -top-4 -right-4 bg-white text-black rounded-full h-10 w-10 flex items-center justify-center z-10">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>
    </button>

    <!-- Contenedor de medios (imagen o video) -->
    <div id="media-container" class="flex-1 bg-black rounded-l-lg overflow-hidden flex items-center justify-center">
      <!-- El contenido se insertará aquí dinámicamente -->
    </div>

    <!-- Información del post -->
    <div class="w-80 p-6 flex flex-col justify-center">
      <p id="lightbox-description" class="text-white text-base mb-4 leading-relaxed"></p>
      <p id="lightbox-author" class="text-white/70 text-sm"></p>
    </div>
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const lightbox = document.getElementById('creator-lightbox');
    const content = document.getElementById('lightbox-content');
    const closeButton = document.getElementById('lightbox-close');
    const mediaContainer = document.getElementById('media-container');
    const descriptionEl = document.getElementById('lightbox-description');
    const authorEl = document.getElementById('lightbox-author');

    if (!lightbox || !closeButton || !mediaContainer || !descriptionEl || !authorEl || !content) return;

    const openLightbox = (detail) => {
      if (!detail || !detail.src) return;

      // Limpiar contenido anterior
      mediaContainer.innerHTML = '';

      if (detail.type === 'video') {
        const video = document.createElement('video');
        video.src = detail.src;
        video.controls = true;
        video.autoplay = true;
        video.playsInline = true;
        video.className = 'w-full h-full object-contain';
        mediaContainer.appendChild(video);
      } else {
        const img = document.createElement('img');
        img.src = detail.src;
        img.className = 'w-full h-full object-contain';
        mediaContainer.appendChild(img);
      }

      descriptionEl.textContent = detail.description || '';
      authorEl.textContent = detail.author ? `Por: @${detail.author}` : '';

      lightbox.classList.remove('opacity-0', 'pointer-events-none');
      content.classList.remove('scale-95');
    };

    const closeLightbox = () => {
      lightbox.classList.add('opacity-0', 'pointer-events-none');
      content.classList.add('scale-95');
      // Detener video si existe
      const video = mediaContainer.querySelector('video');
      if (video) {
        video.pause();
        video.src = '';
      }
    };

    // Event listener para abrir
    document.addEventListener('show-lightbox', (e) => {
      openLightbox(e.detail);
    });

    // Event listeners para cerrar
    closeButton.addEventListener('click', closeLightbox);
    lightbox.addEventListener('click', (e) => {
      if (e.target === lightbox) { // Cierra solo si se hace clic en el fondo
        closeLightbox();
      }
    });
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeLightbox();
      }
    });
  });
</script>
