---
import LazyImage from '../common/LazyImage.astro';

interface Props {
  id: number;
  description: string;
  image?: string;
  thumbnail?: string;
  link?: string;
  categories: string[];
  firstName: string;
  lastName: string;
  registeredAt: string;
}

const { 
  id,
  description,
  image,
  thumbnail,
  link,
  categories,
  firstName,
  lastName,
  registeredAt
} = Astro.props as Props;

// Determine which image to use
const displayImage = thumbnail && thumbnail !== "" && thumbnail !== null 
  ? thumbnail 
  : (image && image !== "" && image !== null 
    ? image 
    : "https://via.placeholder.com/400x600/ff6b35/ffffff?text=Ziba's+Creators");

const authorName = `${firstName} ${lastName}`;
const hasMedia = (image && image !== "" && image !== null) || (thumbnail && thumbnail !== "" && thumbnail !== null);
const isVideo = displayImage?.includes('.mp4') || displayImage?.includes('.webm') || displayImage?.includes('.mov');
---

<div 
  class="block group relative overflow-hidden rounded-[2rem] transition-all duration-300 ease-in-out hover:shadow-[0_0_20px_rgba(0,0,0,0.3)] cursor-pointer post-card"
  style="aspect-ratio: 9 / 16;"
  data-post-id={id}
  data-image={displayImage}
  data-description={description}
  data-author={authorName}
  data-link={link || ""}
  data-has-media={hasMedia}
  data-is-video={isVideo}
>
  <!-- Background Image/Video -->
  <div class="absolute inset-0 w-full h-full">
    {isVideo ? (
      <video
        class="w-full h-full object-cover transform transition-transform duration-500 ease-out group-hover:scale-105"
        muted
        loop
        autoplay
        playsinline
      >
        <source src={displayImage} type="video/mp4" />
      </video>
    ) : (
      <LazyImage
        src={displayImage}
        alt={description}
        class="w-full h-full object-cover transform transition-transform duration-500 ease-out group-hover:scale-105"
      />
    )}
  </div>

  <!-- Overlay -->
  <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent group-hover:from-black/90 transition-colors duration-300"></div>

  <!-- Content -->
  <div class="absolute inset-x-0 bottom-0 p-5 flex flex-col gap-2">
    <!-- Categories -->
    {categories && categories.length > 0 && (
      <div class="flex flex-wrap gap-1 mb-2">
        {categories.map((category) => (
          <span class="text-xs bg-orange text-white px-2 py-1 rounded-full font-medium">
            {category}
          </span>
        ))}
      </div>
    )}
    
    <!-- Description -->
    <p class="text-white text-sm opacity-90 line-clamp-3 leading-relaxed">
      {description}
    </p>
    
    <!-- Author -->
    <p class="text-white text-sm font-semibold mt-1">
      Por {authorName}
    </p>

    <!-- Action Button -->
    <div class="mt-3">
      {link && link !== "" ? (
        <div class="inline-block border-2 border-white bg-transparent text-white py-2 px-6 rounded-md text-center text-sm font-medium">
          Ver enlace
        </div>
      ) : (
        <div class="inline-block border-2 border-white bg-transparent text-white py-2 px-6 rounded-md text-center text-sm font-medium">
          Ver contenido
        </div>
      )}
    </div>
  </div>

  <!-- Play icon for videos -->
  {isVideo && (
    <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-80 group-hover:opacity-100 transition-opacity duration-300">
      <div class="bg-white/20 backdrop-blur-sm rounded-full p-4">
        <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M8 5v14l11-7z"/>
        </svg>
      </div>
    </div>
  )}

  <!-- Link icon for external links -->
  {link && link !== "" && (
    <div class="absolute top-4 right-4 opacity-80 group-hover:opacity-100 transition-opacity duration-300">
      <div class="bg-white/20 backdrop-blur-sm rounded-full p-2">
        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
        </svg>
      </div>
    </div>
  )}
</div>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
