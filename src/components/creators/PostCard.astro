---
// src/components/creators/PostCard.astro
import { Image } from 'astro:assets';
import { getCountryInfo } from '../../utils/countryUtils';

interface Props {
  backgroundImage: string;
  description: string;
  profileName: string;
  country?: string;
  actionUrl?: string;       // URL a la que redirigir
  actionFunc?: string;      // Nombre de una funci√≥n global a ejecutar
  onClick?: string;         // Para pasar JS directamente, ej: "alert('hola')"
  customClasses?: string;
}

const {
  backgroundImage,
  description,
  profileName,
  country,
  actionUrl,
  actionFunc,
  onClick,
  customClasses = '',
} = Astro.props;

const isVideo = backgroundImage?.includes('.mp4') || backgroundImage?.includes('.webm') || backgroundImage?.includes('.mov');

// Determina el comportamiento del clic
let clickHandler = '';
if (actionUrl) {
  clickHandler = `window.open('${actionUrl}', '_blank')`;
} else {
  // Si no hay URL, preparamos para el lightbox
  const mediaType = isVideo ? 'video' : 'image';
  const eventDetail = JSON.stringify({ src: backgroundImage, type: mediaType, description: description, author: profileName });
  clickHandler = `document.dispatchEvent(new CustomEvent('show-lightbox', { detail: ${eventDetail} }))`;
}

const Tag = clickHandler ? 'button' : 'div';
const { name: countryName, flag: countryFlag } = getCountryInfo(country);
---

<Tag
  class={`block group relative overflow-hidden rounded-[2rem] transition-all duration-300 ease-in-out hover:shadow-[0_0_20px_rgba(0,0,0,0.3)] cursor-pointer ${customClasses}`}
  style="aspect-ratio: 9 / 16;"
  onclick={clickHandler}
>
  <!-- Background Image/Video -->
  <div class="absolute inset-0 w-full h-full">
    {isVideo ? (
      <video
        class="w-full h-full object-cover transform transition-transform duration-500 ease-out group-hover:scale-105"
        muted
        loop
        autoplay
        playsinline
      >
        <source src={backgroundImage} type="video/mp4" />
      </video>
    ) : (
      <Image
        src={backgroundImage}
        alt={description}
        width={400}
        height={600}
        class="w-full h-full object-cover transform transition-transform duration-500 ease-out group-hover:scale-105"
      />
    )}
  </div>

  <!-- Overlay -->
  <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

  <!-- Content (visible on hover) -->
  <div class="absolute inset-0 p-5 flex flex-col justify-end items-center text-center bg-gradient-to-t from-black/80 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300">
    <div class="transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300 w-full">
      <!-- Description -->
      <p class="text-white text-sm font-medium mb-3 line-clamp-3">
        {description}
      </p>
      
      <!-- Author -->
      <div class="flex items-center justify-center text-white text-xs font-bold gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
        </svg>
        <span>{profileName}</span>
      </div>

      <!-- Country -->
      {country && (
        <div class="flex items-center justify-center text-white text-xs font-medium gap-1 mt-1 opacity-80">
          <span>{countryFlag}</span>
          <span>{countryName}</span>
        </div>
      )}
    </div>
  </div>

  <!-- Play icon for videos -->
  {isVideo && (
    <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-80 group-hover:opacity-100 transition-opacity duration-300">
      <div class="bg-white/20 backdrop-blur-sm rounded-full p-4">
        <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M8 5v14l11-7z"/>
        </svg>
      </div>
    </div>
  )}
</Tag>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
